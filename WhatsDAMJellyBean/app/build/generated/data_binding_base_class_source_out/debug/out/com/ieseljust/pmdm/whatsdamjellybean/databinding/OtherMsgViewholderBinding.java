// Generated by view binder compiler. Do not edit!
package com.ieseljust.pmdm.whatsdamjellybean.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ieseljust.pmdm.whatsdamjellybean.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OtherMsgViewholderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardMsg;

  @NonNull
  public final LinearLayout layoutMsgOther;

  @NonNull
  public final TextView msgOtherText;

  @NonNull
  public final TextView msgOtherTimestamp;

  @NonNull
  public final TextView msgTextUsuari;

  private OtherMsgViewholderBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardMsg,
      @NonNull LinearLayout layoutMsgOther, @NonNull TextView msgOtherText,
      @NonNull TextView msgOtherTimestamp, @NonNull TextView msgTextUsuari) {
    this.rootView = rootView;
    this.cardMsg = cardMsg;
    this.layoutMsgOther = layoutMsgOther;
    this.msgOtherText = msgOtherText;
    this.msgOtherTimestamp = msgOtherTimestamp;
    this.msgTextUsuari = msgTextUsuari;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OtherMsgViewholderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OtherMsgViewholderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.other_msg_viewholder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OtherMsgViewholderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_msg;
      CardView cardMsg = ViewBindings.findChildViewById(rootView, id);
      if (cardMsg == null) {
        break missingId;
      }

      id = R.id.layout_msg_other;
      LinearLayout layoutMsgOther = ViewBindings.findChildViewById(rootView, id);
      if (layoutMsgOther == null) {
        break missingId;
      }

      id = R.id.msg_other_text;
      TextView msgOtherText = ViewBindings.findChildViewById(rootView, id);
      if (msgOtherText == null) {
        break missingId;
      }

      id = R.id.msg_other_timestamp;
      TextView msgOtherTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (msgOtherTimestamp == null) {
        break missingId;
      }

      id = R.id.msg_text_usuari;
      TextView msgTextUsuari = ViewBindings.findChildViewById(rootView, id);
      if (msgTextUsuari == null) {
        break missingId;
      }

      return new OtherMsgViewholderBinding((ConstraintLayout) rootView, cardMsg, layoutMsgOther,
          msgOtherText, msgOtherTimestamp, msgTextUsuari);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
